# GENETARED BY NNDCT, DO NOT EDIT!

import torch
from torch import tensor
import pytorch_nndct as py_nndct

class QuantizedResNet50(py_nndct.nn.NndctQuantModel):
    def __init__(self):
        super(QuantizedResNet50, self).__init__()
        self.module_0 = py_nndct.nn.Input() #QuantizedResNet50::input_0(QuantizedResNet50::nndct_input_0)
        self.module_1 = py_nndct.nn.quant_input() #QuantizedResNet50::QuantizedResNet50/QuantStub[quant]/10487(QuantizedResNet50::nndct_quant_stub_1)
        self.module_2 = py_nndct.nn.Conv2d(in_channels=3, out_channels=64, kernel_size=[7, 7], stride=[2, 2], padding=[3, 3], dilation=[1, 1], groups=1, bias=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Conv2d[conv1]/ret.5(QuantizedResNet50::nndct_conv2d_2)
        self.module_3 = py_nndct.nn.ReLU(inplace=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/ReLU[relu]/10518(QuantizedResNet50::nndct_relu_3)
        self.module_4 = py_nndct.nn.MaxPool2d(kernel_size=[3, 3], stride=[2, 2], padding=[1, 1], dilation=[1, 1], ceil_mode=False) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/MaxPool2d[maxpool]/10533(QuantizedResNet50::nndct_maxpool_4)
        self.module_5 = py_nndct.nn.Conv2d(in_channels=64, out_channels=64, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer1]/Bottleneck[0]/Conv2d[conv1]/ret.9(QuantizedResNet50::nndct_conv2d_5)
        self.module_6 = py_nndct.nn.ReLU(inplace=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer1]/Bottleneck[0]/ReLU[relu]/10562(QuantizedResNet50::nndct_relu_6)
        self.module_7 = py_nndct.nn.Conv2d(in_channels=64, out_channels=64, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer1]/Bottleneck[0]/Conv2d[conv2]/ret.13(QuantizedResNet50::nndct_conv2d_7)
        self.module_8 = py_nndct.nn.ReLU(inplace=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer1]/Bottleneck[0]/ReLU[relu]/10590(QuantizedResNet50::nndct_relu_8)
        self.module_9 = py_nndct.nn.Conv2d(in_channels=64, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer1]/Bottleneck[0]/Conv2d[conv3]/ret.17(QuantizedResNet50::nndct_conv2d_9)
        self.module_10 = py_nndct.nn.Conv2d(in_channels=64, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer1]/Bottleneck[0]/Sequential[downsample]/Conv2d[0]/ret.21(QuantizedResNet50::nndct_conv2d_10)
        self.module_11 = py_nndct.nn.Add() #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer1]/Bottleneck[0]/10646(QuantizedResNet50::nndct_elemwise_add_11)
        self.module_12 = py_nndct.nn.ReLU(inplace=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer1]/Bottleneck[0]/ReLU[relu]/10647(QuantizedResNet50::nndct_relu_12)
        self.module_13 = py_nndct.nn.Conv2d(in_channels=256, out_channels=64, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer1]/Bottleneck[1]/Conv2d[conv1]/ret.25(QuantizedResNet50::nndct_conv2d_13)
        self.module_14 = py_nndct.nn.ReLU(inplace=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer1]/Bottleneck[1]/ReLU[relu]/10675(QuantizedResNet50::nndct_relu_14)
        self.module_15 = py_nndct.nn.Conv2d(in_channels=64, out_channels=64, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer1]/Bottleneck[1]/Conv2d[conv2]/ret.29(QuantizedResNet50::nndct_conv2d_15)
        self.module_16 = py_nndct.nn.ReLU(inplace=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer1]/Bottleneck[1]/ReLU[relu]/10703(QuantizedResNet50::nndct_relu_16)
        self.module_17 = py_nndct.nn.Conv2d(in_channels=64, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer1]/Bottleneck[1]/Conv2d[conv3]/ret.33(QuantizedResNet50::nndct_conv2d_17)
        self.module_18 = py_nndct.nn.Add() #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer1]/Bottleneck[1]/10732(QuantizedResNet50::nndct_elemwise_add_18)
        self.module_19 = py_nndct.nn.ReLU(inplace=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer1]/Bottleneck[1]/ReLU[relu]/10733(QuantizedResNet50::nndct_relu_19)
        self.module_20 = py_nndct.nn.Conv2d(in_channels=256, out_channels=64, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer1]/Bottleneck[2]/Conv2d[conv1]/ret.37(QuantizedResNet50::nndct_conv2d_20)
        self.module_21 = py_nndct.nn.ReLU(inplace=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer1]/Bottleneck[2]/ReLU[relu]/10761(QuantizedResNet50::nndct_relu_21)
        self.module_22 = py_nndct.nn.Conv2d(in_channels=64, out_channels=64, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer1]/Bottleneck[2]/Conv2d[conv2]/ret.41(QuantizedResNet50::nndct_conv2d_22)
        self.module_23 = py_nndct.nn.ReLU(inplace=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer1]/Bottleneck[2]/ReLU[relu]/10789(QuantizedResNet50::nndct_relu_23)
        self.module_24 = py_nndct.nn.Conv2d(in_channels=64, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer1]/Bottleneck[2]/Conv2d[conv3]/ret.45(QuantizedResNet50::nndct_conv2d_24)
        self.module_25 = py_nndct.nn.Add() #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer1]/Bottleneck[2]/10818(QuantizedResNet50::nndct_elemwise_add_25)
        self.module_26 = py_nndct.nn.ReLU(inplace=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer1]/Bottleneck[2]/ReLU[relu]/10819(QuantizedResNet50::nndct_relu_26)
        self.module_27 = py_nndct.nn.Conv2d(in_channels=256, out_channels=128, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer2]/Bottleneck[0]/Conv2d[conv1]/ret.49(QuantizedResNet50::nndct_conv2d_27)
        self.module_28 = py_nndct.nn.ReLU(inplace=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer2]/Bottleneck[0]/ReLU[relu]/10847(QuantizedResNet50::nndct_relu_28)
        self.module_29 = py_nndct.nn.Conv2d(in_channels=128, out_channels=128, kernel_size=[3, 3], stride=[2, 2], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer2]/Bottleneck[0]/Conv2d[conv2]/ret.53(QuantizedResNet50::nndct_conv2d_29)
        self.module_30 = py_nndct.nn.ReLU(inplace=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer2]/Bottleneck[0]/ReLU[relu]/10875(QuantizedResNet50::nndct_relu_30)
        self.module_31 = py_nndct.nn.Conv2d(in_channels=128, out_channels=512, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer2]/Bottleneck[0]/Conv2d[conv3]/ret.57(QuantizedResNet50::nndct_conv2d_31)
        self.module_32 = py_nndct.nn.Conv2d(in_channels=256, out_channels=512, kernel_size=[1, 1], stride=[2, 2], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer2]/Bottleneck[0]/Sequential[downsample]/Conv2d[0]/ret.61(QuantizedResNet50::nndct_conv2d_32)
        self.module_33 = py_nndct.nn.Add() #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer2]/Bottleneck[0]/10931(QuantizedResNet50::nndct_elemwise_add_33)
        self.module_34 = py_nndct.nn.ReLU(inplace=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer2]/Bottleneck[0]/ReLU[relu]/10932(QuantizedResNet50::nndct_relu_34)
        self.module_35 = py_nndct.nn.Conv2d(in_channels=512, out_channels=128, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer2]/Bottleneck[1]/Conv2d[conv1]/ret.65(QuantizedResNet50::nndct_conv2d_35)
        self.module_36 = py_nndct.nn.ReLU(inplace=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer2]/Bottleneck[1]/ReLU[relu]/10960(QuantizedResNet50::nndct_relu_36)
        self.module_37 = py_nndct.nn.Conv2d(in_channels=128, out_channels=128, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer2]/Bottleneck[1]/Conv2d[conv2]/ret.69(QuantizedResNet50::nndct_conv2d_37)
        self.module_38 = py_nndct.nn.ReLU(inplace=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer2]/Bottleneck[1]/ReLU[relu]/10988(QuantizedResNet50::nndct_relu_38)
        self.module_39 = py_nndct.nn.Conv2d(in_channels=128, out_channels=512, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer2]/Bottleneck[1]/Conv2d[conv3]/ret.73(QuantizedResNet50::nndct_conv2d_39)
        self.module_40 = py_nndct.nn.Add() #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer2]/Bottleneck[1]/11017(QuantizedResNet50::nndct_elemwise_add_40)
        self.module_41 = py_nndct.nn.ReLU(inplace=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer2]/Bottleneck[1]/ReLU[relu]/11018(QuantizedResNet50::nndct_relu_41)
        self.module_42 = py_nndct.nn.Conv2d(in_channels=512, out_channels=128, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer2]/Bottleneck[2]/Conv2d[conv1]/ret.77(QuantizedResNet50::nndct_conv2d_42)
        self.module_43 = py_nndct.nn.ReLU(inplace=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer2]/Bottleneck[2]/ReLU[relu]/11046(QuantizedResNet50::nndct_relu_43)
        self.module_44 = py_nndct.nn.Conv2d(in_channels=128, out_channels=128, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer2]/Bottleneck[2]/Conv2d[conv2]/ret.81(QuantizedResNet50::nndct_conv2d_44)
        self.module_45 = py_nndct.nn.ReLU(inplace=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer2]/Bottleneck[2]/ReLU[relu]/11074(QuantizedResNet50::nndct_relu_45)
        self.module_46 = py_nndct.nn.Conv2d(in_channels=128, out_channels=512, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer2]/Bottleneck[2]/Conv2d[conv3]/ret.85(QuantizedResNet50::nndct_conv2d_46)
        self.module_47 = py_nndct.nn.Add() #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer2]/Bottleneck[2]/11103(QuantizedResNet50::nndct_elemwise_add_47)
        self.module_48 = py_nndct.nn.ReLU(inplace=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer2]/Bottleneck[2]/ReLU[relu]/11104(QuantizedResNet50::nndct_relu_48)
        self.module_49 = py_nndct.nn.Conv2d(in_channels=512, out_channels=128, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer2]/Bottleneck[3]/Conv2d[conv1]/ret.89(QuantizedResNet50::nndct_conv2d_49)
        self.module_50 = py_nndct.nn.ReLU(inplace=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer2]/Bottleneck[3]/ReLU[relu]/11132(QuantizedResNet50::nndct_relu_50)
        self.module_51 = py_nndct.nn.Conv2d(in_channels=128, out_channels=128, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer2]/Bottleneck[3]/Conv2d[conv2]/ret.93(QuantizedResNet50::nndct_conv2d_51)
        self.module_52 = py_nndct.nn.ReLU(inplace=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer2]/Bottleneck[3]/ReLU[relu]/11160(QuantizedResNet50::nndct_relu_52)
        self.module_53 = py_nndct.nn.Conv2d(in_channels=128, out_channels=512, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer2]/Bottleneck[3]/Conv2d[conv3]/ret.97(QuantizedResNet50::nndct_conv2d_53)
        self.module_54 = py_nndct.nn.Add() #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer2]/Bottleneck[3]/11189(QuantizedResNet50::nndct_elemwise_add_54)
        self.module_55 = py_nndct.nn.ReLU(inplace=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer2]/Bottleneck[3]/ReLU[relu]/11190(QuantizedResNet50::nndct_relu_55)
        self.module_56 = py_nndct.nn.Conv2d(in_channels=512, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer3]/Bottleneck[0]/Conv2d[conv1]/ret.101(QuantizedResNet50::nndct_conv2d_56)
        self.module_57 = py_nndct.nn.ReLU(inplace=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer3]/Bottleneck[0]/ReLU[relu]/11218(QuantizedResNet50::nndct_relu_57)
        self.module_58 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[2, 2], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer3]/Bottleneck[0]/Conv2d[conv2]/ret.105(QuantizedResNet50::nndct_conv2d_58)
        self.module_59 = py_nndct.nn.ReLU(inplace=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer3]/Bottleneck[0]/ReLU[relu]/11246(QuantizedResNet50::nndct_relu_59)
        self.module_60 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer3]/Bottleneck[0]/Conv2d[conv3]/ret.109(QuantizedResNet50::nndct_conv2d_60)
        self.module_61 = py_nndct.nn.Conv2d(in_channels=512, out_channels=1024, kernel_size=[1, 1], stride=[2, 2], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer3]/Bottleneck[0]/Sequential[downsample]/Conv2d[0]/ret.113(QuantizedResNet50::nndct_conv2d_61)
        self.module_62 = py_nndct.nn.Add() #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer3]/Bottleneck[0]/11302(QuantizedResNet50::nndct_elemwise_add_62)
        self.module_63 = py_nndct.nn.ReLU(inplace=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer3]/Bottleneck[0]/ReLU[relu]/11303(QuantizedResNet50::nndct_relu_63)
        self.module_64 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer3]/Bottleneck[1]/Conv2d[conv1]/ret.117(QuantizedResNet50::nndct_conv2d_64)
        self.module_65 = py_nndct.nn.ReLU(inplace=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer3]/Bottleneck[1]/ReLU[relu]/11331(QuantizedResNet50::nndct_relu_65)
        self.module_66 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer3]/Bottleneck[1]/Conv2d[conv2]/ret.121(QuantizedResNet50::nndct_conv2d_66)
        self.module_67 = py_nndct.nn.ReLU(inplace=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer3]/Bottleneck[1]/ReLU[relu]/11359(QuantizedResNet50::nndct_relu_67)
        self.module_68 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer3]/Bottleneck[1]/Conv2d[conv3]/ret.125(QuantizedResNet50::nndct_conv2d_68)
        self.module_69 = py_nndct.nn.Add() #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer3]/Bottleneck[1]/11388(QuantizedResNet50::nndct_elemwise_add_69)
        self.module_70 = py_nndct.nn.ReLU(inplace=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer3]/Bottleneck[1]/ReLU[relu]/11389(QuantizedResNet50::nndct_relu_70)
        self.module_71 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer3]/Bottleneck[2]/Conv2d[conv1]/ret.129(QuantizedResNet50::nndct_conv2d_71)
        self.module_72 = py_nndct.nn.ReLU(inplace=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer3]/Bottleneck[2]/ReLU[relu]/11417(QuantizedResNet50::nndct_relu_72)
        self.module_73 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer3]/Bottleneck[2]/Conv2d[conv2]/ret.133(QuantizedResNet50::nndct_conv2d_73)
        self.module_74 = py_nndct.nn.ReLU(inplace=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer3]/Bottleneck[2]/ReLU[relu]/11445(QuantizedResNet50::nndct_relu_74)
        self.module_75 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer3]/Bottleneck[2]/Conv2d[conv3]/ret.137(QuantizedResNet50::nndct_conv2d_75)
        self.module_76 = py_nndct.nn.Add() #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer3]/Bottleneck[2]/11474(QuantizedResNet50::nndct_elemwise_add_76)
        self.module_77 = py_nndct.nn.ReLU(inplace=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer3]/Bottleneck[2]/ReLU[relu]/11475(QuantizedResNet50::nndct_relu_77)
        self.module_78 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer3]/Bottleneck[3]/Conv2d[conv1]/ret.141(QuantizedResNet50::nndct_conv2d_78)
        self.module_79 = py_nndct.nn.ReLU(inplace=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer3]/Bottleneck[3]/ReLU[relu]/11503(QuantizedResNet50::nndct_relu_79)
        self.module_80 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer3]/Bottleneck[3]/Conv2d[conv2]/ret.145(QuantizedResNet50::nndct_conv2d_80)
        self.module_81 = py_nndct.nn.ReLU(inplace=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer3]/Bottleneck[3]/ReLU[relu]/11531(QuantizedResNet50::nndct_relu_81)
        self.module_82 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer3]/Bottleneck[3]/Conv2d[conv3]/ret.149(QuantizedResNet50::nndct_conv2d_82)
        self.module_83 = py_nndct.nn.Add() #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer3]/Bottleneck[3]/11560(QuantizedResNet50::nndct_elemwise_add_83)
        self.module_84 = py_nndct.nn.ReLU(inplace=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer3]/Bottleneck[3]/ReLU[relu]/11561(QuantizedResNet50::nndct_relu_84)
        self.module_85 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer3]/Bottleneck[4]/Conv2d[conv1]/ret.153(QuantizedResNet50::nndct_conv2d_85)
        self.module_86 = py_nndct.nn.ReLU(inplace=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer3]/Bottleneck[4]/ReLU[relu]/11589(QuantizedResNet50::nndct_relu_86)
        self.module_87 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer3]/Bottleneck[4]/Conv2d[conv2]/ret.157(QuantizedResNet50::nndct_conv2d_87)
        self.module_88 = py_nndct.nn.ReLU(inplace=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer3]/Bottleneck[4]/ReLU[relu]/11617(QuantizedResNet50::nndct_relu_88)
        self.module_89 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer3]/Bottleneck[4]/Conv2d[conv3]/ret.161(QuantizedResNet50::nndct_conv2d_89)
        self.module_90 = py_nndct.nn.Add() #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer3]/Bottleneck[4]/11646(QuantizedResNet50::nndct_elemwise_add_90)
        self.module_91 = py_nndct.nn.ReLU(inplace=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer3]/Bottleneck[4]/ReLU[relu]/11647(QuantizedResNet50::nndct_relu_91)
        self.module_92 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer3]/Bottleneck[5]/Conv2d[conv1]/ret.165(QuantizedResNet50::nndct_conv2d_92)
        self.module_93 = py_nndct.nn.ReLU(inplace=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer3]/Bottleneck[5]/ReLU[relu]/11675(QuantizedResNet50::nndct_relu_93)
        self.module_94 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer3]/Bottleneck[5]/Conv2d[conv2]/ret.169(QuantizedResNet50::nndct_conv2d_94)
        self.module_95 = py_nndct.nn.ReLU(inplace=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer3]/Bottleneck[5]/ReLU[relu]/11703(QuantizedResNet50::nndct_relu_95)
        self.module_96 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer3]/Bottleneck[5]/Conv2d[conv3]/ret.173(QuantizedResNet50::nndct_conv2d_96)
        self.module_97 = py_nndct.nn.Add() #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer3]/Bottleneck[5]/11732(QuantizedResNet50::nndct_elemwise_add_97)
        self.module_98 = py_nndct.nn.ReLU(inplace=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer3]/Bottleneck[5]/ReLU[relu]/11733(QuantizedResNet50::nndct_relu_98)
        self.module_99 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=512, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer4]/Bottleneck[0]/Conv2d[conv1]/ret.177(QuantizedResNet50::nndct_conv2d_99)
        self.module_100 = py_nndct.nn.ReLU(inplace=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer4]/Bottleneck[0]/ReLU[relu]/11761(QuantizedResNet50::nndct_relu_100)
        self.module_101 = py_nndct.nn.Conv2d(in_channels=512, out_channels=512, kernel_size=[3, 3], stride=[2, 2], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer4]/Bottleneck[0]/Conv2d[conv2]/ret.181(QuantizedResNet50::nndct_conv2d_101)
        self.module_102 = py_nndct.nn.ReLU(inplace=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer4]/Bottleneck[0]/ReLU[relu]/11789(QuantizedResNet50::nndct_relu_102)
        self.module_103 = py_nndct.nn.Conv2d(in_channels=512, out_channels=2048, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer4]/Bottleneck[0]/Conv2d[conv3]/ret.185(QuantizedResNet50::nndct_conv2d_103)
        self.module_104 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=2048, kernel_size=[1, 1], stride=[2, 2], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer4]/Bottleneck[0]/Sequential[downsample]/Conv2d[0]/ret.189(QuantizedResNet50::nndct_conv2d_104)
        self.module_105 = py_nndct.nn.Add() #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer4]/Bottleneck[0]/11845(QuantizedResNet50::nndct_elemwise_add_105)
        self.module_106 = py_nndct.nn.ReLU(inplace=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer4]/Bottleneck[0]/ReLU[relu]/11846(QuantizedResNet50::nndct_relu_106)
        self.module_107 = py_nndct.nn.Conv2d(in_channels=2048, out_channels=512, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer4]/Bottleneck[1]/Conv2d[conv1]/ret.193(QuantizedResNet50::nndct_conv2d_107)
        self.module_108 = py_nndct.nn.ReLU(inplace=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer4]/Bottleneck[1]/ReLU[relu]/11874(QuantizedResNet50::nndct_relu_108)
        self.module_109 = py_nndct.nn.Conv2d(in_channels=512, out_channels=512, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer4]/Bottleneck[1]/Conv2d[conv2]/ret.197(QuantizedResNet50::nndct_conv2d_109)
        self.module_110 = py_nndct.nn.ReLU(inplace=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer4]/Bottleneck[1]/ReLU[relu]/11902(QuantizedResNet50::nndct_relu_110)
        self.module_111 = py_nndct.nn.Conv2d(in_channels=512, out_channels=2048, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer4]/Bottleneck[1]/Conv2d[conv3]/ret.201(QuantizedResNet50::nndct_conv2d_111)
        self.module_112 = py_nndct.nn.Add() #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer4]/Bottleneck[1]/11931(QuantizedResNet50::nndct_elemwise_add_112)
        self.module_113 = py_nndct.nn.ReLU(inplace=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer4]/Bottleneck[1]/ReLU[relu]/11932(QuantizedResNet50::nndct_relu_113)
        self.module_114 = py_nndct.nn.Conv2d(in_channels=2048, out_channels=512, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer4]/Bottleneck[2]/Conv2d[conv1]/ret.205(QuantizedResNet50::nndct_conv2d_114)
        self.module_115 = py_nndct.nn.ReLU(inplace=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer4]/Bottleneck[2]/ReLU[relu]/11960(QuantizedResNet50::nndct_relu_115)
        self.module_116 = py_nndct.nn.Conv2d(in_channels=512, out_channels=512, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer4]/Bottleneck[2]/Conv2d[conv2]/ret.209(QuantizedResNet50::nndct_conv2d_116)
        self.module_117 = py_nndct.nn.ReLU(inplace=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer4]/Bottleneck[2]/ReLU[relu]/11988(QuantizedResNet50::nndct_relu_117)
        self.module_118 = py_nndct.nn.Conv2d(in_channels=512, out_channels=2048, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer4]/Bottleneck[2]/Conv2d[conv3]/ret.213(QuantizedResNet50::nndct_conv2d_118)
        self.module_119 = py_nndct.nn.Add() #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer4]/Bottleneck[2]/12017(QuantizedResNet50::nndct_elemwise_add_119)
        self.module_120 = py_nndct.nn.ReLU(inplace=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[layer4]/Bottleneck[2]/ReLU[relu]/12018(QuantizedResNet50::nndct_relu_120)
        self.module_121 = py_nndct.nn.AdaptiveAvgPool2d(output_size=[1, 1]) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/AdaptiveAvgPool2d[avgpool]/12035(QuantizedResNet50::nndct_adaptive_avg_pool2d_121)
        self.module_122 = py_nndct.nn.Module('nndct_flatten') #QuantizedResNet50::QuantizedResNet50/ResNet[model]/ret.217(QuantizedResNet50::nndct_flatten_122)
        self.module_123 = py_nndct.nn.Linear(in_features=2048, out_features=256, bias=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[fc]/Linear[0]/ret.219(QuantizedResNet50::nndct_dense_123)
        self.module_124 = py_nndct.nn.ReLU(inplace=False) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[fc]/ReLU[1]/ret.221(QuantizedResNet50::nndct_relu_124)
        self.module_125 = py_nndct.nn.Linear(in_features=256, out_features=256, bias=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[fc]/Linear[3]/ret.223(QuantizedResNet50::nndct_dense_125)
        self.module_126 = py_nndct.nn.Linear(in_features=256, out_features=10, bias=True) #QuantizedResNet50::QuantizedResNet50/ResNet[model]/Sequential[fc]/Linear[4]/ret.225(QuantizedResNet50::nndct_dense_126)
        self.module_127 = py_nndct.nn.dequant_output() #QuantizedResNet50::QuantizedResNet50/DeQuantStub[dequant]/12052(QuantizedResNet50::nndct_dequant_stub_127)

    @py_nndct.nn.forward_processor
    def forward(self, *args):
        output_module_0 = self.module_0(input=args[0])
        output_module_0 = self.module_1(input=output_module_0)
        output_module_0 = self.module_2(output_module_0)
        output_module_0 = self.module_3(output_module_0)
        output_module_0 = self.module_4(output_module_0)
        output_module_5 = self.module_5(output_module_0)
        output_module_5 = self.module_6(output_module_5)
        output_module_5 = self.module_7(output_module_5)
        output_module_5 = self.module_8(output_module_5)
        output_module_5 = self.module_9(output_module_5)
        output_module_10 = self.module_10(output_module_0)
        output_module_5 = self.module_11(input=output_module_5, other=output_module_10, alpha=1)
        output_module_5 = self.module_12(output_module_5)
        output_module_13 = self.module_13(output_module_5)
        output_module_13 = self.module_14(output_module_13)
        output_module_13 = self.module_15(output_module_13)
        output_module_13 = self.module_16(output_module_13)
        output_module_13 = self.module_17(output_module_13)
        output_module_13 = self.module_18(input=output_module_13, other=output_module_5, alpha=1)
        output_module_13 = self.module_19(output_module_13)
        output_module_20 = self.module_20(output_module_13)
        output_module_20 = self.module_21(output_module_20)
        output_module_20 = self.module_22(output_module_20)
        output_module_20 = self.module_23(output_module_20)
        output_module_20 = self.module_24(output_module_20)
        output_module_20 = self.module_25(input=output_module_20, other=output_module_13, alpha=1)
        output_module_20 = self.module_26(output_module_20)
        output_module_27 = self.module_27(output_module_20)
        output_module_27 = self.module_28(output_module_27)
        output_module_27 = self.module_29(output_module_27)
        output_module_27 = self.module_30(output_module_27)
        output_module_27 = self.module_31(output_module_27)
        output_module_32 = self.module_32(output_module_20)
        output_module_27 = self.module_33(input=output_module_27, other=output_module_32, alpha=1)
        output_module_27 = self.module_34(output_module_27)
        output_module_35 = self.module_35(output_module_27)
        output_module_35 = self.module_36(output_module_35)
        output_module_35 = self.module_37(output_module_35)
        output_module_35 = self.module_38(output_module_35)
        output_module_35 = self.module_39(output_module_35)
        output_module_35 = self.module_40(input=output_module_35, other=output_module_27, alpha=1)
        output_module_35 = self.module_41(output_module_35)
        output_module_42 = self.module_42(output_module_35)
        output_module_42 = self.module_43(output_module_42)
        output_module_42 = self.module_44(output_module_42)
        output_module_42 = self.module_45(output_module_42)
        output_module_42 = self.module_46(output_module_42)
        output_module_42 = self.module_47(input=output_module_42, other=output_module_35, alpha=1)
        output_module_42 = self.module_48(output_module_42)
        output_module_49 = self.module_49(output_module_42)
        output_module_49 = self.module_50(output_module_49)
        output_module_49 = self.module_51(output_module_49)
        output_module_49 = self.module_52(output_module_49)
        output_module_49 = self.module_53(output_module_49)
        output_module_49 = self.module_54(input=output_module_49, other=output_module_42, alpha=1)
        output_module_49 = self.module_55(output_module_49)
        output_module_56 = self.module_56(output_module_49)
        output_module_56 = self.module_57(output_module_56)
        output_module_56 = self.module_58(output_module_56)
        output_module_56 = self.module_59(output_module_56)
        output_module_56 = self.module_60(output_module_56)
        output_module_61 = self.module_61(output_module_49)
        output_module_56 = self.module_62(input=output_module_56, other=output_module_61, alpha=1)
        output_module_56 = self.module_63(output_module_56)
        output_module_64 = self.module_64(output_module_56)
        output_module_64 = self.module_65(output_module_64)
        output_module_64 = self.module_66(output_module_64)
        output_module_64 = self.module_67(output_module_64)
        output_module_64 = self.module_68(output_module_64)
        output_module_64 = self.module_69(input=output_module_64, other=output_module_56, alpha=1)
        output_module_64 = self.module_70(output_module_64)
        output_module_71 = self.module_71(output_module_64)
        output_module_71 = self.module_72(output_module_71)
        output_module_71 = self.module_73(output_module_71)
        output_module_71 = self.module_74(output_module_71)
        output_module_71 = self.module_75(output_module_71)
        output_module_71 = self.module_76(input=output_module_71, other=output_module_64, alpha=1)
        output_module_71 = self.module_77(output_module_71)
        output_module_78 = self.module_78(output_module_71)
        output_module_78 = self.module_79(output_module_78)
        output_module_78 = self.module_80(output_module_78)
        output_module_78 = self.module_81(output_module_78)
        output_module_78 = self.module_82(output_module_78)
        output_module_78 = self.module_83(input=output_module_78, other=output_module_71, alpha=1)
        output_module_78 = self.module_84(output_module_78)
        output_module_85 = self.module_85(output_module_78)
        output_module_85 = self.module_86(output_module_85)
        output_module_85 = self.module_87(output_module_85)
        output_module_85 = self.module_88(output_module_85)
        output_module_85 = self.module_89(output_module_85)
        output_module_85 = self.module_90(input=output_module_85, other=output_module_78, alpha=1)
        output_module_85 = self.module_91(output_module_85)
        output_module_92 = self.module_92(output_module_85)
        output_module_92 = self.module_93(output_module_92)
        output_module_92 = self.module_94(output_module_92)
        output_module_92 = self.module_95(output_module_92)
        output_module_92 = self.module_96(output_module_92)
        output_module_92 = self.module_97(input=output_module_92, other=output_module_85, alpha=1)
        output_module_92 = self.module_98(output_module_92)
        output_module_99 = self.module_99(output_module_92)
        output_module_99 = self.module_100(output_module_99)
        output_module_99 = self.module_101(output_module_99)
        output_module_99 = self.module_102(output_module_99)
        output_module_99 = self.module_103(output_module_99)
        output_module_104 = self.module_104(output_module_92)
        output_module_99 = self.module_105(input=output_module_99, other=output_module_104, alpha=1)
        output_module_99 = self.module_106(output_module_99)
        output_module_107 = self.module_107(output_module_99)
        output_module_107 = self.module_108(output_module_107)
        output_module_107 = self.module_109(output_module_107)
        output_module_107 = self.module_110(output_module_107)
        output_module_107 = self.module_111(output_module_107)
        output_module_107 = self.module_112(input=output_module_107, other=output_module_99, alpha=1)
        output_module_107 = self.module_113(output_module_107)
        output_module_114 = self.module_114(output_module_107)
        output_module_114 = self.module_115(output_module_114)
        output_module_114 = self.module_116(output_module_114)
        output_module_114 = self.module_117(output_module_114)
        output_module_114 = self.module_118(output_module_114)
        output_module_114 = self.module_119(input=output_module_114, other=output_module_107, alpha=1)
        output_module_114 = self.module_120(output_module_114)
        output_module_114 = self.module_121(output_module_114)
        output_module_114 = self.module_122(input=output_module_114, start_dim=1, end_dim=-1)
        output_module_114 = self.module_123(output_module_114)
        output_module_114 = self.module_124(output_module_114)
        output_module_114 = self.module_125(output_module_114)
        output_module_114 = self.module_126(output_module_114)
        output_module_114 = self.module_127(input=output_module_114)
        return output_module_114
